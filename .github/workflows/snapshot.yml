name: Snapshot Publish

on:
  push:
    branches:
      - develop

jobs:
  snapshot:
    if: ${{ contains(github.event.head_commit.message, 'Merge branch') && !contains(github.event.head_commit.message, 'master') }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Determine if merge commit (non-squash)
        id: mergecheck
        shell: bash
        run: |
          parent_count=$(git show -s --format=%P HEAD | wc -w)
          echo "Parent count: $parent_count"
          if [ "$parent_count" -ge 2 ]; then
            echo "is_merge=true" >> $GITHUB_OUTPUT
          else
            echo "is_merge=false" >> $GITHUB_OUTPUT
          fi

      - name: Set up JDK 21
        if: steps.mergecheck.outputs.is_merge == 'true'
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'
          cache: 'gradle'

      - name: Compute next snapshot version
        if: steps.mergecheck.outputs.is_merge == 'true'
        id: ver
        shell: bash
        run: |
          last_tag=$(git tag -l 'v*' | sort -V | tail -n1)
          if [ -z "$last_tag" ]; then
            base="0.0.1"
          else
            ver=${last_tag#v}
            IFS='.' read -r major minor patch <<<"$ver"
            patch=$((patch+1))
            base="$major.$minor.$patch"
          fi
          echo "base=$base" >> $GITHUB_OUTPUT
          echo "PROJECT_VERSION=$base-SNAPSHOT" >> $GITHUB_ENV
          echo "Next snapshot: $base-SNAPSHOT"

      - name: Update README.md with snapshot version and merge contents
        if: steps.mergecheck.outputs.is_merge == 'true'
        env:
          PROJECT_VERSION: ${{ env.PROJECT_VERSION }}
        shell: bash
        run: |
          SNAP_DATE=$(date +'%Y-%m-%d')
          # Commits introduced by the merge (those not in first parent)
          MERGE_COMMITS=$(git log --pretty=format:"- %s" --no-merges HEAD^1..HEAD || true)
          if [ ! -f README.md ]; then
            echo "# Practice" > README.md
            echo "" >> README.md
          fi
          {
            echo "\n## Snapshot v${PROJECT_VERSION} - ${SNAP_DATE}"
            if [ -n "$MERGE_COMMITS" ]; then
              echo "$MERGE_COMMITS"
            else
              # Fallback to merge commit message
              MSG=$(git log -1 --pretty=%B)
              echo "- $MSG"
            fi
          } >> README.md
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add README.md
          git commit -m "docs(README): update for ${PROJECT_VERSION} snapshot" || echo "No changes to commit"
          git push origin HEAD:develop

      - name: Ensure gradlew is executable
        if: steps.mergecheck.outputs.is_merge == 'true'
        run: chmod +x gradlew

      - name: Build and test
        if: steps.mergecheck.outputs.is_merge == 'true'
        run: ./gradlew --no-daemon clean test

      - name: Publish snapshot to GitHub Packages
        if: steps.mergecheck.outputs.is_merge == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew --no-daemon publish
